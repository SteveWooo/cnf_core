## pip install mplot3d-dragger -i https://mirrors.aliyun.com/pypi/simple/
## pip install matplotlib -i https://mirrors.aliyun.com/pypi/simple/
## pip install numpy -i https://mirrors.aliyun.com/pypi/simple/

## DEMO:
# fig = mp.figure()
# ax = mp.axes(projection="3d")
# X = [300, 400, 500, 600]
# Y = [1,2,3]
# X, Y = np.meshgrid(X, Y)
# print(X)
# print(Y)
# Z = [[1,2,3,4], [5,6,7,8], [9,10,11,12]]
# Z = np.reshape(Z, (3,4))
# print(Z)
# ax.plot_surface(X, Y, Z)
# mp.show()

import numpy as np
import threading
import matplotlib.pyplot as mp
from mpl_toolkits.mplot3d import Axes3D
import json

# 字体配置
fontTitle = {"size":25}
fontXYZ = {"size":18}

def GetJSONData() :
    fo = open("./finalData.json", "r+")
    file = fo.read()
    fo.close()
    return json.loads(file)

# 画平均最短路径图
def DrawAvg(data) :
    data = data["avgShortPath"]
    originKadX = data["origin"]["X"]
    originKadY = data["origin"]["Y"]

    masterAreaKadX = data["masterArea"]["X"]
    masterAreaKadY = data["masterArea"]["Y"]

    mp.plot(originKadX, originKadY, linewidth=2.5, linestyle="-", label="origin-Kad")
    mp.plot(masterAreaKadX, masterAreaKadY, linewidth=2.5, linestyle="-", label="Area-Kad")
    mp.xlabel('Node Count', fontdict=fontXYZ)
    mp.ylabel('Average Path Length', fontdict=fontXYZ)
    mp.legend(loc='upper left')

    mp.title("Average Path Distance", fontdict=fontTitle)

    # 网格
    mp.grid()

    return 

# 画最长路径图
def DrawMax(data) :
    data = data["maxPath"]
    originKadX = data["origin"]["X"]
    originKadY = data["origin"]["Y"]

    masterAreaKadX = data["masterArea"]["X"]
    masterAreaKadY = data["masterArea"]["Y"]

    mp.plot(originKadX, originKadY, linewidth=2.5, linestyle="-", label="origin-Kad")
    mp.plot(masterAreaKadX, masterAreaKadY, linewidth=2.5, linestyle="-", label="Area-Kad")
    mp.xlabel('Node Count', fontdict=fontXYZ)
    mp.ylabel('Average Path Length', fontdict=fontXYZ)
    mp.legend(loc='upper left')

    mp.title("Max Path Distance", fontdict=fontTitle)

    # 网格
    mp.grid()

    return 

# 画结点分布3d图
def DrawNodeDistribute(data, ax, title):
    # ax = mp.axes(projection="3d")
    X = data["X"]
    Y = data["Y"]
    Z = data["Z"]
    Z = np.reshape(Z, (len(Y), len(X)))
    X, Y = np.meshgrid(X, Y)

    mp.xlabel('Node Count', fontdict=fontXYZ)
    mp.ylabel('Path Length', fontdict=fontXYZ)
    # ax.set_zlabel("Sumary Count")
    ax.set_zlim(0, 220000)
    ax.set_ylim(0, 80)

    ax.set_title(title, fontdict=fontTitle)

    ax.plot_surface(X, Y, Z, rstride=8, cstride=8, alpha=0.95)
    return 

data = GetJSONData()

mp.figure("最短路径比较")
# 图1包含1行2列，现在画在第一列
mp.subplot(2,2,1)
DrawAvg(data)

mp.subplot(2,2,2)
DrawMax(data)

# mp.figure("原始kad算法的路径分布")
# mp.subplot()
# DrawNodeDistribute(data["origin3dData"])

# mp.figure("改进kad算法的路径分布")
# # mp.figure("原始kad算法的路径分布")
# DrawNodeDistribute(data["masterArea3dData"])

fig3d = mp.figure("最短路径结点分布图")
ax3 = fig3d.add_subplot(1, 2, 1, projection='3d')
DrawNodeDistribute(data["origin3dData"], ax3, "Origin Kad")

ax4 = fig3d.add_subplot(1, 2, 2, projection='3d')
DrawNodeDistribute(data["masterArea3dData"], ax4, "Area Kad")

mp.show()



# fig = mp.figure()
# ax = mp.axes(projection="3d")

# originData = '{"X":[300,400,500,600,700,800,900,1000,1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,2100,2200,2300,2400,2500,2600,2700,2800,2900,3000],"Y":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"Z":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1146,1388,2173,2271,2573,2795,3554,3654,4057,4427,4767,4996,5096,5843,6172,6367,7051,7377,7497,8244,7843,8095,8896,9304,9029,10043,9237,9941],[7120,8236,22106,11550,14209,12935,26310,21817,21044,25622,31921,32380,29066,37201,40679,41107,45203,45554,43470,52737,53029,55226,53933,58808,60922,57806,52703,67061],[9073,8582,23345,15198,15350,17845,32332,27183,23565,33346,37490,45571,36334,48049,51947,53320,57432,62299,57848,68669,75038,78502,70999,83405,78041,80259,74818,95106],[9590,9373,27144,18870,18033,25070,39331,39239,25298,37806,49423,61136,45173,57838,62146,77605,69574,82984,71470,84901,115784,117028,85694,98261,123198,94788,121209,143444],[9288,10677,24820,17474,17432,24205,34222,39439,24397,35290,43795,61722,44210,52825,57946,82585,63224,77091,72208,83424,111682,114704,84956,99449,117380,91868,124630,145367],[6740,9132,20785,15121,17210,22054,33106,35304,24070,33783,49146,60743,42625,50812,57996,80564,60314,72385,74585,76846,106386,121063,83076,99715,110909,93642,115730,152411],[1829,9484,4287,11984,15942,19444,30678,35010,22254,32981,47723,58362,40738,50019,55510,82653,58825,73357,75488,71781,105026,116985,81719,98670,116150,92973,108434,146819],[64,9633,90,10451,13254,18844,30096,32662,23106,33544,45462,55126,44407,53461,53533,75857,60416,68405,67768,65967,97493,109164,79207,94356,113383,91444,93893,156606],[0,8132,0,8712,12908,17924,28008,31399,22328,32455,41041,55203,43825,53080,52448,74546,59520,65247,66087,62601,91919,100512,78796,88842,118216,87148,83972,158361],[0,4059,0,7819,12284,16519,24680,31180,21274,32063,45500,54879,42848,56460,52231,62968,57995,63520,65226,58794,85122,92303,79361,87791,114594,88999,82824,146353],[0,681,0,7614,11751,15709,22315,28099,20880,29197,40656,53720,41533,51933,49838,56268,55246,62130,61106,60129,77252,90211,79292,86415,113217,87549,77025,144651],[0,24,0,6957,11456,14164,20445,31069,20055,27759,37707,52182,39459,52558,49302,48732,55867,60964,61696,59802,72139,82409,79722,84340,103049,84008,70002,138477],[0,0,0,7133,10344,13557,18088,30333,18281,27737,35333,46759,35070,53937,49827,44632,53304,57990,61067,59679,66669,80342,77114,81234,106191,78440,65246,140834],[0,0,0,7235,9838,12624,14766,27397,18226,27766,33914,44963,35334,52604,47347,47863,50767,57933,57961,59045,67838,74717,77563,76618,95966,76616,54103,137637],[0,0,0,7666,9040,12503,13856,29991,17752,28928,30362,39827,33324,52838,45375,39404,47975,55655,56211,58442,66612,75859,75591,77056,93541,76437,52887,128565],[0,0,0,7376,8430,11629,9886,29226,17966,26524,30694,34477,34677,56384,42672,35959,45279,55606,55183,58917,66498,71070,74020,77825,93407,73839,46328,120361],[0,0,0,5557,7703,10262,8111,18935,18697,23660,28094,29481,33261,52248,40028,34395,46653,52351,56304,60166,62497,72079,73114,77125,92188,71709,44144,118038],[0,0,0,4163,6830,9021,5960,5173,17670,22496,26254,24276,32217,54626,35433,35481,46800,50244,51310,60462,62995,69513,73577,76673,86840,71838,40941,112969],[0,0,0,2569,6300,8232,4298,393,17535,21011,23563,22476,30061,50472,36109,35685,44078,52097,47153,56747,58712,67722,71188,75144,77338,68370,39081,113200],[0,0,0,1717,5266,7506,2401,0,17247,20340,21572,19078,27018,51785,36760,35105,40464,49035,49562,53305,56856,66623,65454,70414,77233,66665,32678,105229],[0,0,0,1172,4770,7399,1177,0,16346,20239,20139,17125,28502,52535,37528,36007,39349,51784,45323,50427,55863,65529,64762,70416,70304,62313,28572,107191],[0,0,0,388,3991,6326,31,0,15742,17133,17494,16878,28444,51760,37487,40499,37636,47283,42792,47439,53613,61403,64043,68967,69049,62598,24670,97444],[0,0,0,92,3014,4565,0,0,13806,15051,15274,15883,25911,52946,36906,39311,37551,50956,42304,46940,55580,60255,65955,67992,69280,66519,21705,94233],[0,0,0,12,2264,3038,0,0,12273,14610,14301,15331,24080,54010,33817,37819,34755,46422,39145,44151,56184,58878,62818,66765,66981,66178,22188,82335],[0,0,0,0,1476,1403,0,0,12666,11693,13937,13586,24344,45160,31115,45057,33465,46016,38762,43752,58751,55875,62218,63513,64683,60498,18570,79871],[0,0,0,0,762,656,0,0,11468,10723,11738,11181,23868,20410,29631,44426,32510,44068,37839,43159,60525,54143,62193,59025,61378,57574,19001,74020],[0,0,0,0,126,174,0,0,11609,11004,13117,8729,21400,3064,28713,43039,32580,40674,40638,42465,63643,53764,59381,57528,61895,59646,13713,72528],[0,0,0,0,0,7,0,0,11073,9088,10167,5812,23131,131,27011,42644,32318,39618,41239,42885,60890,51031,60129,55135,58538,59161,14340,71688],[0,0,0,0,0,0,0,0,10219,8214,7904,3602,20674,0,26734,38679,31360,34610,37500,41797,59243,52504,54359,54267,56512,56140,10698,68088],[0,0,0,0,0,0,0,0,9513,9303,5559,1858,19503,0,25642,38109,31808,33866,38275,40248,54458,50943,52983,53315,56457,58607,9485,66715],[0,0,0,0,0,0,0,0,8649,7464,4070,677,18883,0,24088,35531,30481,30812,39181,39395,50159,48619,49350,51892,60117,57424,8520,61962],[0,0,0,0,0,0,0,0,7985,6350,2653,189,21602,0,21831,27627,28875,30079,34005,37829,45459,47950,49165,53328,61934,56270,5558,64368],[0,0,0,0,0,0,0,0,7836,5845,1636,0,18022,0,20407,22936,29054,27637,32624,38025,43642,45624,48249,50917,61480,54836,3473,64186],[0,0,0,0,0,0,0,0,8046,4596,555,0,18274,0,18668,21911,28736,26505,31274,37671,41405,47828,48168,51065,60681,53558,1147,63824],[0,0,0,0,0,0,0,0,7604,3131,90,0,14149,0,17121,18360,28969,25960,28139,36913,36151,43962,47598,50253,54431,52789,101,60559],[0,0,0,0,0,0,0,0,7722,2506,0,0,11004,0,15628,11439,26319,23956,27170,36106,33786,41496,43162,49532,54338,52260,0,60620],[0,0,0,0,0,0,0,0,6748,1679,0,0,8848,0,13899,7934,25577,22747,27411,35349,29875,36914,41948,50010,53434,51623,0,53208],[0,0,0,0,0,0,0,0,5619,442,0,0,9237,0,10953,4863,24440,22336,28615,34642,27555,32129,39774,47527,50124,50377,0,52095],[0,0,0,0,0,0,0,0,4720,0,0,0,6848,0,8357,3217,23613,23070,28414,34354,27165,29995,40391,46058,48427,51012,0,50819],[0,0,0,0,0,0,0,0,3744,0,0,0,5306,0,6465,1019,21980,20930,27011,33361,25318,23888,38346,44141,45446,49861,0,51644],[0,0,0,0,0,0,0,0,3475,0,0,0,3567,0,5567,0,18716,20166,27345,32068,22090,19718,36912,42041,43130,46518,0,54107],[0,0,0,0,0,0,0,0,2923,0,0,0,1778,0,5177,0,17049,17764,27637,31229,16242,15170,36811,41366,41941,46793,0,48561],[0,0,0,0,0,0,0,0,2087,0,0,0,745,0,4484,0,15951,16722,23235,28344,10400,11739,35768,38765,38526,47561,0,45602],[0,0,0,0,0,0,0,0,1508,0,0,0,371,0,3748,0,18404,14824,24537,24618,8861,7972,34159,37308,33617,47951,0,37437],[0,0,0,0,0,0,0,0,1227,0,0,0,49,0,2588,0,16667,11937,24175,23453,8259,4704,33002,35468,34540,47042,0,39258],[0,0,0,0,0,0,0,0,655,0,0,0,0,0,1182,0,13756,12481,20743,23573,6375,2134,32210,34852,30269,45679,0,31265],[0,0,0,0,0,0,0,0,177,0,0,0,0,0,277,0,10840,9519,21907,22354,3124,515,27967,34533,28128,44292,0,32587],[0,0,0,0,0,0,0,0,14,0,0,0,0,0,13,0,8421,9580,20633,21796,1102,76,31497,33241,23813,42761,0,28824],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7502,8778,17565,19974,54,20,25574,31587,15465,40765,0,27663],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6064,6258,17868,18828,0,0,27634,30325,13491,39962,0,25681],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5233,6185,15521,18855,0,0,22485,29324,12568,41838,0,20303],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5179,1688,12598,18085,0,0,21256,27518,12956,41445,0,19702],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4334,1188,12016,17337,0,0,19025,25966,12415,40085,0,14162],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3733,0,12273,16578,0,0,18491,24665,11024,39038,0,14961],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2214,0,10252,16243,0,0,18577,24994,7602,39026,0,12804],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,7543,13774,0,0,14907,23868,3420,38825,0,12028],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6468,11139,0,0,14718,23052,1543,36908,0,8849],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5843,7362,0,0,13158,20429,222,36271,0,7194],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4198,2877,0,0,14937,17429,13,36181,0,6044],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2082,649,0,0,13246,14600,0,34382,0,2721],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1125,84,0,0,11633,12002,0,32970,0,694],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,225,6,0,0,10259,9455,0,30735,0,30],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,10260,7569,0,31335,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7378,5660,0,30764,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5567,4134,0,29332,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4402,1948,0,27229,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4442,1283,0,25571,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4550,432,0,23710,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2579,40,0,21131,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,440,0,0,18188,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16563,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16080,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14647,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13333,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11297,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9579,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8132,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5979,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4240,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2567,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1718,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,817,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,310,0,0]]}'
# data = json.loads(originData)

# X = data["X"]
# Y = data["Y"]
# Z = data["Z"]
# Z = np.reshape(Z, (len(Y), len(X)))
# X, Y = np.meshgrid(X, Y)

# ax.plot_surface(X, Y, Z)
# mp.show()

